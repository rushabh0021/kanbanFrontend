{"version":3,"sources":["./src/app/modals/add-board-modal/add-board-modal.component.ts","./src/app/modals/add-board-modal/add-board-modal.component.html","./src/app/auth-guard.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/board/board.component.ts","./src/app/board/board.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modals/add-task-modal/add-task-modal.component.ts","./src/app/modals/add-task-modal/add-task-modal.component.html","./src/app/app.module.ts","./src/app/kanban/kanban.component.ts","./src/app/kanban/kanban.component.html","./src/app/board-and-task.service.ts","./src/app/loginsignup.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\ninterface boardInfo{\n  name: string,\n  description: string\n}\n@Component({\n  selector: 'app-add-board-modal',\n  templateUrl: './add-board-modal.component.html',\n  styleUrls: ['./add-board-modal.component.css']\n})\nexport class AddBoardModalComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddBoardModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: boardInfo) { }\n\n  ngOnInit(): void {\n  }\n  onSubmitClick(): void {\n    this.dialogRef.close() \n  }\n}\n","<form class=\"createBoard-form\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Board Name</mat-label>\n    <input\n      matInput\n      name=\"taskname\"\n      [(ngModel)]=\"data.name\"\n      placeholder=\"Ex. Update the PR\"\n      value=\"Brush teeth\"\n    />\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Description</mat-label>\n    <textarea matInput name=\"description\" [(ngModel)]=\"data.description\" placeholder=\"Ex. This is very imp PR\"></textarea>\n  </mat-form-field>\n\n  <button mat-raised-button [mat-dialog-close]=\"data\">Submit</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginsignupService } from './loginsignup.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n\n  constructor(private loginService: LoginsignupService, private router: Router) { }\n\n  canActivate() {\n    if (!this.loginService.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { BoardAndTaskService } from '../board-and-task.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddBoardModalComponent } from '../modals/add-board-modal/add-board-modal.component';\r\nimport { LoginsignupService } from '../loginsignup.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n  boards: [];\r\n  tasks: [];\r\n  constructor(private boardService: BoardAndTaskService,\r\n    public dialog: MatDialog,\r\n    private loginService: LoginsignupService,\r\n    public router: Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getBoardsApiCall();\r\n\r\n  }\r\n\r\n  getBoardsApiCall() {\r\n    let boards = this.boardService.getBoardsFromStorage()\r\n    if (!boards) {\r\n      this.boardService.getBoards().subscribe((boardsArray: any) => {\r\n        console.log(boardsArray);\r\n        if (boardsArray.data) {\r\n          this.boards = boardsArray.data;\r\n          localStorage.setItem(\"boards\", JSON.stringify(this.boards));\r\n          this.getTaskApiCall();\r\n        }\r\n      })\r\n    } else {\r\n      console.log(this.loginService.getAuthToken());\r\n      this.boards = JSON.parse(boards);\r\n      this.getTaskApiCall();\r\n    }\r\n  }\r\n  /* getTaskApiCall() {\r\n    let tasks = this.boardService.getTasksFromStorage()\r\n    if (!tasks) {\r\n      this.boardService.getTasks().subscribe((taskArray: any) => {\r\n        console.log(taskArray);\r\n        if (taskArray.data) { \r\n          this.boardService.setTaskData(taskArray.data);\r\n        }\r\n      });\r\n    } else {\r\n      console.log(this.loginService.getAuthToken());\r\n      this.tasks = tasks;\r\n    }\r\n  } */\r\n   getTaskApiCall() {\r\n     this.boardService.getTasks();\r\n  } \r\n\r\n  openAddBoardModal() {\r\n    const dialogRef = this.dialog.open(AddBoardModalComponent, {\r\n      width: '500px',\r\n      data: { name: \"\", description: \"\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      console.log(result);\r\n      this.boardService.createBoard(result).subscribe((res) => {\r\n        localStorage.removeItem('boards');\r\n        this.getBoardsApiCall();\r\n\r\n      });\r\n    });\r\n  }\r\n  showKanban(clickedBoardId) {\r\n    console.log(clickedBoardId);\r\n    this.router.navigate(['kanban', { boardId: clickedBoardId} ]);\r\n  }\r\n\r\n  callDeleteBoard(event ,boardData){\r\n    event.stopPropagation();\r\n    this.boardService.deleteBoard(boardData).subscribe((res)=>{\r\n      localStorage.removeItem('boards');\r\n      this.getBoardsApiCall();\r\n    });\r\n  }\r\n}\r\n","<div class=\"boards-container\">\r\n  <div class=\"header-container\">\r\n    <h1>Board List</h1>\r\n    <span (click)=\"openAddBoardModal()\"><mat-icon>add</mat-icon></span>\r\n  </div>\r\n  <div class=\"board-list-container\">\r\n    <mat-card *ngFor=\"let board of boards\" (click)=\"showKanban(board._id)\" class=\"board-div\">\r\n      <div [attr.data-id]=\"board._id\" class=\"board-card\">\r\n        <h4>{{ board.name }}</h4>\r\n        <div class=\"icons-container\">\r\n          <mat-icon>edit</mat-icon>\r\n          <mat-icon class=\"delete-board-button\" (click)=\"callDeleteBoard($event, board)\">delete</mat-icon>\r\n        </div>\r\n      </div>\r\n      <p>{{ board.description }}</p>\r\n    </mat-card>\r\n    <!-- <mat-card class=\"board-card\">\r\n      <h4>THis is board name</h4>\r\n      <div class=\"icons-container\">\r\n        <mat-icon>edit</mat-icon>\r\n        <mat-icon>delete</mat-icon>\r\n      </div>\r\n    </mat-card> -->\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { Router } from '@angular/router';\nimport { LoginsignupService } from './loginsignup.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'personalkanban';\n  _router = this.router;\n  constructor(private loginService: LoginsignupService, public router: Router) { }\n  routes = [\n    { path: \"/boards\", title: \"My Boards\" },\n    { path: \"/about\", title: \"about\" },\n  ];\n  logout() {\n    this.loginService.deleteAuthToken();\n    this.router.navigate(['login']);\n  }\n}\n","<div class=\"body\">\r\n  <header id=\"header\">\r\n    <nav id=\"nav\" class=\"nav\">\r\n      <div class=\"mobile-logout\">\r\n        <a class=\"logout_btn\" href=\"#\"><i class=\"fas fa-power-off\"></i></a>\r\n      </div>\r\n      <div class=\"container-nav\">\r\n        <h1><span class=\"heading\">My</span>Kanban</h1>\r\n        <ul>\r\n          <li *ngFor=\"let item of routes\">\r\n            <a [routerLink]=\"item.path\" routerLinkActive=\"active\">{{\r\n              item.title\r\n            }}</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"desktop-logout\" *ngIf=\"_router.url !== '/login' && _router.url !== '/signup'\">\r\n          <mat-icon mat-icon [matMenuTriggerFor]=\"loginLogout\">power_settings_new</mat-icon>\r\n          <mat-menu #loginLogout=\"matMenu\">\r\n            <button mat-menu-item (click)=\"logout()\">Logout</button>\r\n          </mat-menu>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <div class=\"maincontainer\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <footer id=\"footer\">\r\n    <div class=\"social\">\r\n      <a href=\"http://facebook.com\" target=\"_blank\"\r\n        ><i class=\"fab fa-facebook fa-2x\"></i\r\n      ></a>\r\n      <a href=\"http://twitter.com\" target=\"_blank\"\r\n        ><i class=\"fab fa-twitter fa-2x\"></i\r\n      ></a>\r\n      <a href=\"http://instagram.com\" target=\"_blank\"\r\n        ><i class=\"fab fa-instagram fa-2x\"></i\r\n      ></a>\r\n      <a href=\"http://youtube.com\" target=\"_blank\"\r\n        ><i class=\"fab fa-youtube fa-2x\"></i\r\n      ></a>\r\n    </div>\r\n  </footer>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\ninterface taskData {\n  taskName: string,\n  description: string,\n  priority: string,\n  dueDate: string\n}\n@Component({\n  selector: 'app-add-task-modal',\n  templateUrl: './add-task-modal.component.html',\n  styleUrls: ['./add-task-modal.component.css']\n})\nexport class AddTaskModalComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddTaskModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: taskData) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmitClick(): void {\n    this.dialogRef.close()\n  }\n}\n","<form  #form=\"ngForm\" class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Task Name</mat-label>\n    <input\n      matInput\n      name=\"taskname\"\n      [(ngModel)]=\"data.taskName\"\n      placeholder=\"Ex. Update the PR\"\n      value=\"Brush teeth\"\n      required\n    />\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Description</mat-label>\n    <textarea matInput required name=\"description\" [(ngModel)]=\"data.description\" placeholder=\"Ex. This is very imp PR\"></textarea>\n  </mat-form-field>\n\n  <mat-label>Priority</mat-label><br />\n  <mat-button-toggle-group required name=\"prioritySelector\" [(ngModel)]=\"data.priority\">\n    <mat-button-toggle value=\"low\">Low</mat-button-toggle>\n    <mat-button-toggle value=\"medium\">Medium</mat-button-toggle>\n    <mat-button-toggle class=\"high\" value=\"high\">High</mat-button-toggle>\n  </mat-button-toggle-group>\n<br />\n  <mat-form-field class=\"display-block\">\n    <mat-label>Due Date</mat-label>\n    <input matInput  name=\"dueDate\" [(ngModel)]=\"data.dueDate\" name=\"dueDate\" [matDatepicker]=\"picker\" required/>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n  <button [disabled]=\"form.invalid\" mat-raised-button [mat-dialog-close]=\"data\">Submit</button>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { BoardComponent } from './board/board.component';\r\nimport { KanbanComponent } from './kanban/kanban.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AddTaskModalComponent } from './modals/add-task-modal/add-task-modal.component';\r\nimport { AddBoardModalComponent } from './modals/add-board-modal/add-board-modal.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem(\"kanId\");\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    BoardComponent,\r\n    KanbanComponent,\r\n    AboutComponent,\r\n    AddTaskModalComponent,\r\n    AddBoardModalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: [\"mypersonalkanban.com\", \"localhost:4200\"],\r\n        disallowedRoutes: [\"http://example.com/examplebadroute/\"],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BoardAndTaskService } from '../board-and-task.service';\r\nimport { AddBoardModalComponent } from '../modals/add-board-modal/add-board-modal.component';\r\nimport { AddTaskModalComponent } from '../modals/add-task-modal/add-task-modal.component';\r\ninterface taskData {\r\n  taskName: string,\r\n  description: string,\r\n  priority: string,\r\n  dueDate: string\r\n}\r\n@Component({\r\n  selector: 'app-kanban',\r\n  templateUrl: './kanban.component.html',\r\n  styleUrls: ['./kanban.component.css']\r\n})\r\nexport class KanbanComponent implements OnInit {\r\n  taskData: taskData = {\r\n    taskName: \"task name\",\r\n    description: \"description\",\r\n    dueDate: \"\",\r\n    priority: \"\"\r\n  }\r\n  boardId;\r\n  constructor(public dialog: MatDialog, public router: Router,\r\n    private route: ActivatedRoute,\r\n    public boardTaskService: BoardAndTaskService) {\r\n    this.route.params.subscribe(params => {\r\n      console.log(params);\r\n      this.boardId = params.boardId;\r\n      this.populateArray(this.boardId);\r\n    });\r\n  }\r\n  /* todo = [\r\n    {\r\n      \"title\": \"task_todo1\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-high\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-mid\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-mid\"\r\n    },\r\n  ];\r\n  done = [\r\n    {\r\n      \"title\": \"task_done1\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n  ];\r\n  test = [\r\n    {\r\n      \"title\": \"task_done1\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n    {\r\n      \"title\": \"task\",\r\n      \"description\": \"this is descrption\",\r\n      \"priority\": \"task-normal\"\r\n    },\r\n  ]; */\r\n\r\n  taskpool = [];\r\n  done = [];\r\n  inprogress = [];\r\n\r\n  kanbanArray = {\r\n    taskpool: this.taskpool,\r\n    done: this.done,\r\n    inprogress: this.inprogress\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  populateArray(boardId) {\r\n    let taskData = this.boardTaskService.getTaskData();\r\n    taskData.filter((kanban) => {\r\n      /* if (boardId === kanban.board){\r\n        switch (kanban.status){\r\n          case \"taskpool\":\r\n            this.taskpool.push(kanban);\r\n            break;\r\n          case \"done\":\r\n            this.done.push(kanban);\r\n            break;\r\n          case \"inprogress\":\r\n            this.inprogress.push(kanban);\r\n            break;  \r\n        }\r\n      } */\r\n      if (boardId === kanban.board) {\r\n        this.kanbanArray[kanban.status].push(kanban);\r\n      }\r\n    });\r\n  }\r\n\r\n  openAddTaskModal() {\r\n    const dialogRef = this.dialog.open(AddTaskModalComponent, {\r\n      width: '500px',\r\n      data: this.taskData,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      console.log(result);\r\n      //this.taskData = result;\r\n      this.callCreateTaskApi(result);\r\n    });\r\n\r\n  }\r\n  callCreateTaskApi(taskData) {\r\n    let taskDataWithBoardId = { ...taskData, board: this.boardId, status: \"taskpool\" };\r\n    this.boardTaskService.createTask(taskDataWithBoardId).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.kanbanArray[res.data.status].push(res.data);\r\n    });\r\n  }\r\n\r\n  evaluateTaskToUpdate() {\r\n\r\n    Object.keys(this.kanbanArray).forEach((taskType) => {\r\n\r\n      this.kanbanArray[taskType].forEach((taskElem) => {\r\n        if (taskElem.status !== taskType) {\r\n          taskElem.status = taskType;\r\n          this.boardTaskService.updateTaskApi(taskElem).subscribe((response)=>{\r\n            console.log(response);\r\n            \r\n          });\r\n        }\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      (event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex);\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- kanban sectin -->\r\n<section class=\"\" id=\"kanbans\">\r\n  <div class=\"container-kan\">\r\n    <div class=\"sub-container task-pool\">\r\n      <p class=\"add-task-container\">\r\n        <i class=\"fas fa-plus add-task\" (click)=\"openAddTaskModal()\"></i>\r\n      </p>\r\n      <div\r\n        class=\"task-collection-container\"\r\n        cdkDropList\r\n        #taskPool=\"cdkDropList\"\r\n        [cdkDropListData]=\"taskpool\"\r\n        [cdkDropListConnectedTo]=\"[inProgressList,doneList]\"\r\n        (cdkDropListDropped)=\"drop($event)\"\r\n      >\r\n        <div class=\"task\" *ngFor=\"let task of taskpool\" cdkDrag>\r\n          <div [class]=\"'task-'+task.priority\" class=\"task-container\">\r\n            <h4>{{ task.taskName }}</h4>\r\n            <p>{{ task.description }}</p>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"task\">\r\n          <div class=\"task-container task-high\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-mid\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-normal\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"sub-container inProgress\">\r\n      <p class=\"add-task-container\"></p>\r\n      <div\r\n        class=\"task-collection-container\"\r\n        cdkDropList\r\n        #inProgressList=\"cdkDropList\"\r\n        [cdkDropListData]=\"inprogress\"\r\n        [cdkDropListConnectedTo]=\"[taskPool,doneList]\"\r\n        (cdkDropListDropped)=\"drop($event)\"\r\n      >\r\n        <div class=\"task\" *ngFor=\"let task of inprogress\" cdkDrag>\r\n          <div [class]=\"'task-'+task.priority\" class=\"task-container\">\r\n            <h4>{{ task.taskName }}</h4>\r\n            <p>{{ task.description }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"task\">\r\n          <div class=\"task-container task-mid\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-normal\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-high\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"sub-container finished\">\r\n       <p class=\"add-task-container\"></p>\r\n      <div\r\n        class=\"task-collection-container\"\r\n        cdkDropList\r\n        #doneList=\"cdkDropList\"\r\n        [cdkDropListData]=\"done\"\r\n        [cdkDropListConnectedTo]=\"[taskPool,inProgressList]\"\r\n        (cdkDropListDropped)=\"drop($event)\"\r\n      >\r\n       <div class=\"task\" *ngFor=\"let task of done\" cdkDrag>\r\n          <div [class]=\"'task-'+task.priority\" class=\"task-container\">\r\n            <h4>{{ task.taskName }}</h4>\r\n            <p>{{ task.description }}</p>\r\n          </div>\r\n        </div>\r\n       <!--  <div class=\"task\">\r\n          <div class=\"task-container task-high\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-mid\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-normal\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"task\">\r\n          <div class=\"task-container task-high\">\r\n            <h4>This is task label</h4>\r\n            <p>This is description about the task which is very important</p>\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"submit-button-wrapper\">\r\n    <button class=\"submit-button\" (click)=\"evaluateTaskToUpdate()\" mat-raised-button>Submit</button>\r\n  </div>\r\n</section>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginsignupService } from './loginsignup.service';\r\n\r\nconst url = \"https://cryptic-falls-65041.herokuapp.com/api/\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BoardAndTaskService {\r\n\r\n  getBoardsPath = \"board\";\r\n  signInPath = \"signin\";\r\n  createTaskPath = \"task\";\r\n  getAllTasks = \"task\";\r\n  updateTask = \"task\";\r\n  private tasks = [];\r\n  constructor(private http: HttpClient, private loginService: LoginsignupService) { }\r\n\r\n  getBoards() {\r\n    return this.http.get(`${this.getUrl()}${this.getBoardsPath}`, { headers: this.getHeaderWithAuthToken() });\r\n  }\r\n  deleteBoard(boardData){\r\n    let headers = this.getHeaderWithAuthToken();\r\n    return this.http.delete(`${this.getUrl()}${this.getBoardsPath}/${boardData._id}`, { \"headers\": headers });\r\n  }\r\n\r\n  createBoard(boardData) {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.loginService.getAuthToken()}`\r\n    })\r\n    return this.http.post(`${this.getUrl()}${this.getBoardsPath}`, boardData, { headers: headers })\r\n  }\r\n\r\n  createTask(taskData) {\r\n    let headers = this.getHeaderWithAuthToken();\r\n    return this.http.post(`${this.getUrl()}${this.createTaskPath}`, taskData, { \"headers\": headers });\r\n  }\r\n\r\n  getTasks() {\r\n    let headers = this.getHeaderWithAuthToken();\r\n    this.http.get(`${this.getUrl()}${this.getAllTasks}`, { headers: headers }).subscribe((taskArray: any) => {\r\n      if (taskArray.data) {\r\n        this.setTaskData(taskArray.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  getBoardsFromStorage() {\r\n    return localStorage.getItem(\"boards\") ? localStorage.getItem(\"boards\") : \"\";\r\n  }\r\n\r\n  getTasksFromStorage() {\r\n    let tasks = localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : [];\r\n    return tasks;\r\n  }\r\n\r\n  setTaskData(tasks) {\r\n    this.tasks = tasks;\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }\r\n\r\n  getTaskData() {\r\n    let tasks = this.tasks && this.tasks.length > 1 ? this.tasks : this.getTasksFromStorage();\r\n    return tasks;\r\n  }\r\n\r\n  getUrl() {\r\n    return url;\r\n  }\r\n\r\n  updateTaskApi(taskData) {\r\n    let headers = this.getHeaderWithAuthToken();\r\n    return this.http.put(`${this.getUrl()}${this.updateTask}/${taskData._id}`, taskData, { \"headers\": headers });\r\n  }\r\n\r\n  getHeaderWithAuthToken() {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.loginService.getAuthToken()}`\r\n    })\r\n  }\r\n}\r\n\r\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nconst url = \"https://cryptic-falls-65041.herokuapp.com/\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginsignupService implements OnDestroy, OnInit {\r\n  signupPath = \"signup\";\r\n  signInPath = \"signin\";\r\n  private authToken = \"\";\r\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\r\n\r\n  ngOnDestroy(): void {\r\n    localStorage.setItem(\"kanId\", this.authToken);\r\n  }\r\n  ngOnInit() {\r\n    const token = localStorage.getItem('kanId');\r\n    if (token) {\r\n      this.authToken = token;\r\n    }\r\n  }\r\n\r\n  signUp(credentials) {\r\n    return this.http.post(`${this.getUrl()}${this.signupPath}`, { action: \"signup\", ...credentials });\r\n  }\r\n\r\n  login(credentials) {\r\n    return this.http.post(`${this.getUrl()}${this.signInPath}`, { action: \"login\", ...credentials });\r\n  }\r\n\r\n  getUrl() {\r\n    return url;\r\n  }\r\n  setAuthToken(token) {\r\n    this.authToken = token;\r\n    localStorage.setItem(\"kanId\", token);\r\n  }\r\n  getAuthToken() {\r\n    return this.authToken ? this.authToken : localStorage.getItem(\"kanId\");\r\n  }\r\n  deleteAuthToken() {\r\n    this.authToken = \"\";\r\n    localStorage.removeItem(\"boards\");\r\n    localStorage.removeItem(\"tasks\");\r\n    localStorage.removeItem('kanId');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = this.authToken !== \"\" ? this.authToken : localStorage.getItem('kanId');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoginsignupService } from '../loginsignup.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  email = \"\";\n  password = \"\";\n  message = \"\";\n  constructor(private signupService: LoginsignupService) { }\n\n  ngOnInit(): void {\n  }\n\n  callSignUpAPI(event) {\n    debugger;\n    let email = event.target.email.value;\n    let password = event.target.password.value;\n    this.signupService.signUp({ email, password }).subscribe((res: any) => {\n      console.log(res);\n      if (res.action == \"created\") { \n       this.message = \"Account successfully created, please login!\";\n      }else {\n        this.message = \"something went wrong\";\n        event.target.email.value = \"\";\n        event.target.password.value = \"\";\n      }\n    });\n  }\n}\n","<!-- Signup section -->\n<section class=\"\" id=\"signup\">\n  <div class=\"center\">\n    <h1>Signup</h1>\n    <form (submit)=\"callSignUpAPI($event)\">\n      <div class=\"txt_field\">\n        <input type=\"text\" name=\"email\" required />\n        <span></span>\n        <label>Username</label>\n      </div>\n      <div class=\"txt_field\">\n        <input type=\"password\" name=\"password\" required />\n        <span></span>\n        <label>Password</label>\n      </div>\n      <p class=\"register-res\">{{ message }}</p>\n      <div class=\"pass\"></div>\n      <input type=\"submit\" value=\"signup\" />\n      <div class=\"signup_link\">\n        Already have an Account?\n        <a routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n      </div>\n    </form>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { AuthGuardService } from './auth-guard.service';\nimport { BoardComponent } from './board/board.component';\nimport { KanbanComponent } from './kanban/kanban.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  {path:\"login\", component: LoginComponent},\n  {path:\"signup\", component: SignupComponent},\n  {path:\"boards\", component: BoardComponent, canActivate: [AuthGuardService]},\n  { path: \"kanban\", component: KanbanComponent, canActivate: [AuthGuardService]},\n  {path:\"about\", component: AboutComponent},\n  {path:\"**\", redirectTo:\"/login\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginsignupService } from '../loginsignup.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private signupService: LoginsignupService,\n    private router: Router) { }\n  message;\n  ngOnInit(): void {\n  }\n  callSignInAPI(event) {\n    debugger;\n    let email = event.target.email.value;\n    let password = event.target.password.value;\n    this.signupService.login({ email, password }).subscribe((res: any) => {\n      console.log(res);\n      if (res.token && res.token !== \"\") {\n        this.signupService.setAuthToken(res.token);\n        this.router.navigate(['/boards']);\n      } else {\n        console.warn(\"login failed\");\n        \n      }\n      //login success\n      //Redirect to boards page\n    });\n  }\n\n}\n","<!-- Login section -->\n<section class=\"\" id=\"login\">\n  <div class=\"center\">\n    <h1>Login</h1>\n    <form (submit)=\"callSignInAPI($event)\">\n      <div class=\"txt_field\">\n        <input type=\"text\" name=\"email\" required />\n        <span></span>\n        <label>Username</label>\n      </div>\n      <div class=\"txt_field\">\n        <input type=\"password\" name=\"password\" required />\n        <span></span>\n        <label>Password</label>\n      </div>\n      <div class=\"pass\">Forgot Password?</div>\n      <input type=\"submit\" value=\"Login\" />\n      <div class=\"signup_link\">\n        Not a member?\n        <a routerLink=\"/signup\" routerLinkActive=\"active\"> Sign Up</a>\n      </div>\n    </form>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatButtonToggleModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    DragDropModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}